 IDENTIFICATION DIVISION.
 PROGRAM-ID.   EXO03B.
**************************************************
* UTILISATION DES INDICATEURS DE VARIABLES
*     VOIR DECLARATIONS DES INDICATEURS DE 
* DE VARIABLES DANS LE FICHIER EMP.TXT 
**************************************************

* AFFICHER LES INFORMATIONS DU PRODUIT 'P03'
 ENVIRONMENT DIVISION.
 CONFIGURATION SECTION.
 SPECIAL-NAMES.
     DECIMAL-POINT IS COMMA.

 DATA DIVISION.
 WORKING-STORAGE SECTION.

      EXEC SQL
          INCLUDE SQLCA
      END-EXEC
       EXEC SQL
          INCLUDE EMP
       END-EXEC

       EXEC SQL
          INCLUDE DEPT
       END-EXEC

 * DECLARATION DU CURSEUR
       EXEC SQL
          DECLARE CDEPTS CURSOR
          FOR
          SELECT DEPT, DNAME
          FROM DEPTS
       END-EXEC
 * DECLARATION DU CURSEUR
       EXEC SQL
         DECLARE CEMPS CURSOR
         FOR
         SELECT LNAME, FNAME
         FROM EMPLOYEES
         WHERE DEPT = :DEPT-DEPT
      END-EXEC

 77 WS-ANO     PIC 99 VALUE ZERO.
 77 NB-EMP     PIC 99 VALUE ZERO.

 PROCEDURE DIVISION.

      EXEC SQL
          OPEN CDEPTS
      END-EXEC
      PERFORM TEST-SQLCODE
      PERFORM FETCH-DEPT

      PERFORM UNTIL SQLCODE = +100


        DISPLAY "DEPT   : ", DEPT-DEPT
        DISPLAY "DNAME  : ", DEPT-DNAME
        MOVE ZERO TO NB-EMP
            EXEC SQL
                OPEN CEMPS
            END-EXEC
            PERFORM TEST-SQLCODE

            PERFORM FETCH-EMP

            PERFORM UNTIL SQLCODE = +100
                DISPLAY EMP-FNAME, " ", EMP-LNAME
                ADD 1 TO NB-EMP
                INITIALIZE ST-EMP
                PERFORM FETCH-EMP

            END-PERFORM
            DISPLAY "NB EMP :", NB-EMP
            DISPLAY "-----------------------------"
            EXEC SQL
                CLOSE CEMPS
            END-EXEC
            PERFORM TEST-SQLCODE
            INITIALIZE ST-DEPT

        PERFORM FETCH-DEPT

      END-PERFORM

       EXEC SQL
           CLOSE CDEPTS
       END-EXEC
       PERFORM TEST-SQLCODE

       GOBACK.

  FETCH-EMP.
      EXEC SQL
          FETCH CEMPS
          INTO :EMP-LNAME, :EMP-FNAME :IND-FNAME
      END-EXEC
      PERFORM TEST-SQLCODE

      IF IND-FNAME IS NEGATIVE THEN
          MOVE "NULL VALUE" TO EMP-FNAME
      END-IF

      .
  FETCH-DEPT.
      EXEC SQL
          FETCH CDEPTS
          INTO :DEPT-DEPT, :DEPT-DNAME
      END-EXEC
      PERFORM TEST-SQLCODE.

  TEST-SQLCODE.

      EVALUATE TRUE
          WHEN SQLCODE = ZERO
                  CONTINUE
          WHEN SQLCODE > 0
              IF SQLCODE = +100
                  DISPLAY "JEU DE DONNEES VIDE OU FINI"
              ELSE
                  DISPLAY "WARNING : ", SQLCODE
              END-IF
          WHEN SQLCODE < ZERO
              PERFORM ABEND-PROG
      END-EVALUATE.

  ABEND-PROG.
      DISPLAY "ANOMALIE GRAVE : ", SQLCODE
      COMPUTE WS-ANO = 1 / WS-ANO.

