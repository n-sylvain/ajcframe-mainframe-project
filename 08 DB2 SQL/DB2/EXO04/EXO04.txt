 IDENTIFICATION DIVISION.
 PROGRAM-ID. EXO04.

 ENVIRONMENT DIVISION.
 CONFIGURATION SECTION.
 SPECIAL-NAMES.
     DECIMAL-POINT IS COMMA.

 INPUT-OUTPUT SECTION.
 FILE-CONTROL.
     SELECT EMPM ASSIGN TO EMPLMAJ
     ORGANIZATION IS SEQUENTIAL
     FILE STATUS IS FS-EMPM.


 DATA DIVISION.
 FILE SECTION.
 FD EMPM.
 01 ENR-EMPM.
     05 CODE-EMPM    PIC     X(5).
     05 NOM-EMPM     PIC     X(15).
     05 PREN-EMPM    PIC     X(15).
     05 CP-EMPM      PIC     X(5).
     05 VILLE-EMPM   PIC     X(20).
     05 SALAIRE-EMPM PIC     9(5)V99.
     05 MAJ-EMPM     PIC     X.
     05 FILLER       PIC     X(2).

  WORKING-STORAGE SECTION.
  77 FS-EMPM      PIC 99.

  77 WS-ANO       PIC 99.
  77 FF-EMPM      PIC 9 VALUE ZERO.

  77 WS-NBMAJ     PIC 99        VALUE ZERO.
  77 WS-NBMAJOK   PIC 99        VALUE ZERO.
  77 ED-POURC     PIC ZZ9,99.
  
       EXEC SQL INCLUDE SQLCA   END-EXEC
       EXEC SQL INCLUDE EMPDATA END-EXEC
  
 PROCEDURE DIVISION.

     PERFORM OUV-EMPM
     PERFORM LECT-EMPM

    PERFORM UNTIL FF-EMPM = 1
      ADD 1 TO WS-NBMAJ
      DISPLAY "MAJ : ", MAJ-EMPM
      DISPLAY "CODE-EMPM : ", CODE-EMPM
      DISPLAY "------------------------------------------------"
      DISPLAY "ENR EMPM : ", ENR-EMPM
      DISPLAY "------------------------------------------------"
      EVALUATE MAJ-EMPM
         WHEN 'C'
              PERFORM CREATION
         WHEN 'M'
              PERFORM MODIFICATION
         WHEN 'S'
              PERFORM SUPPRESSION
         WHEN OTHER
              DISPLAY "CODE MAJ INVALIDE POUR ", CODE-EMPM
      END-EVALUATE
      PERFORM LECT-EMPM

     END-PERFORM

     PERFORM STATS
     PERFORM FERM-EMPM
     

*    EXEC SQL ROLLBACK END-EXEC
*    DISPLAY "ROLLBACK DONE !"

     EXEC SQL COMMIT   END-EXEC
     DISPLAY "COMMIT  DONE ! - SQLCODE :", SQLCODE


     
     GOBACK.

 STATS.
      IF WS-NBMAJ > ZERO THEN
          COMPUTE ED-POURC = (WS-NBMAJOK * 100) / WS-NBMAJ
          DISPLAY "% OK : ", ED-POURC
      END-IF
      .
 AFFECTATION.
      MOVE CODE-EMPM     TO EMPDATA-CODE-EMP
      MOVE NOM-EMPM      TO EMPDATA-NOM-EMP
      MOVE PREN-EMPM     TO EMPDATA-PREN-EMP
      MOVE CP-EMPM       TO EMPDATA-CP-EMP
      MOVE VILLE-EMPM    TO EMPDATA-VILLE-EMP
      MOVE SALAIRE-EMPM  TO EMPDATA-SALAIRE-EMP 
     .
  
 CREATION.
      PERFORM AFFECTATION
      EXEC SQL
          INSERT INTO EMPDATA
                (CODE_EMP, NOM_EMP, PREN_EMP,
                CP_EMP, VILLE_EMP, SALAIRE_EMP)
          VALUES
        (:EMPDATA-CODE-EMP, :EMPDATA-NOM-EMP, :EMPDATA-PREN-EMP,
        :EMPDATA-CP-EMP, :EMPDATA-VILLE-EMP, :EMPDATA-SALAIRE-EMP)
      END-EXEC
      DISPLAY "-- SQLCODE --", SQLCODE
      EVALUATE SQLCODE
         WHEN ZERO
              DISPLAY CODE-EMPM, " A ETE CREE AVEC SUCCES"
              ADD 1 TO WS-NBMAJOK
         WHEN -803
              DISPLAY CODE-EMPM, " EN DOUBLON - ECHEC INSERT"
         WHEN OTHER
            IF SQLCODE < 0 THEN
              DISPLAY "ERR INSERT : SQLCODE : ", SQLCODE
              PERFORM ABEND-PROG
            ELSE
                DISPLAY "WARNING INSERT : ", SQLCODE
            END-IF
      END-EVALUATE
      .

  MODIFICATION.
      PERFORM AFFECTATION
      EXEC SQL
           UPDATE EMPDATA
           SET NOM_EMP     = :EMPDATA-NOM-EMP,
               PREN_EMP    = :EMPDATA-PREN-EMP,
               CP_EMP      = :EMPDATA-CP-EMP,
               VILLE_EMP   = :EMPDATA-VILLE-EMP,
               SALAIRE_EMP = :EMPDATA-SALAIRE-EMP
           WHERE CODE_EMP  = :EMPDATA-CODE-EMP
      END-EXEC
      DISPLAY "-- SQLCODE --", SQLCODE
      EVALUATE SQLCODE
         WHEN ZERO
              DISPLAY CODE-EMPM, " A ETE MODIFIE AVEC SUCCES"
              ADD 1 TO WS-NBMAJOK
         WHEN +100
              DISPLAY CODE-EMPM, " INEXISTANT - ECHEC UPDATE"
         WHEN OTHER
            IF SQLCODE < 0 THEN
              DISPLAY "ERR UPDATE : SQLCODE : ", SQLCODE
              PERFORM ABEND-PROG
            ELSE
                DISPLAY "WARNING UPDATE : ", SQLCODE
            END-IF
      END-EVALUATE
      .

 SUPPRESSION.
      PERFORM AFFECTATION
      EXEC SQL
            DELETE FROM EMPDATA
            WHERE CODE_EMP  = :EMPDATA-CODE-EMP
      END-EXEC

      DISPLAY "-- SQLCODE --", SQLCODE

      EVALUATE SQLCODE
         WHEN ZERO
              DISPLAY CODE-EMPM, " A ETE SUPPRIME AVEC SUCCES"
              ADD 1 TO WS-NBMAJOK
         WHEN +100
              DISPLAY CODE-EMPM, " INEXISTANT - ECHEC DELETE"
         WHEN OTHER
            IF SQLCODE < 0 THEN
              DISPLAY "ERR DELETE : SQLCODE : ", SQLCODE
              PERFORM ABEND-PROG
            ELSE
                DISPLAY "WARNING DELETE : ", SQLCODE
            END-IF
      END-EVALUATE
      .

 ABEND-PROG.
     DISPLAY "ANOMALIE GRAVE : "
     MOVE ZERO TO WS-ANO
     COMPUTE WS-ANO = 1 / WS-ANO.

 OUV-EMPM.
     OPEN INPUT EMPM
     IF FS-EMPM NOT = ZERO THEN
         DISPLAY "ERR OPEN - FS-EMPM : ", FS-EMPM
         PERFORM ABEND-PROG
     END-IF.

 FERM-EMPM.
     CLOSE EMPM
     IF FS-EMPM NOT = ZERO THEN
         DISPLAY "ERR CLOSE - FS-EMPM : ", FS-EMPM
         PERFORM ABEND-PROG
     END-IF.

 LECT-EMPM.
     READ EMPM AT END
         DISPLAY "FIN DE FICHIER EMPM - FS : ", FS-EMPM
         MOVE 1 TO FF-EMPM
     END-READ.




